import asyncio
from playwright.async_api import async_playwright

async def get_forms(page):
    forms = await page.locator('form').all()
    for f in forms:
        action = await f.get_attribute('action')
        inputs = await f.locator('input').all()

async def add_user(page):
    name = page.locator('input[name="name"]')
    name.fill('test')

    username = page.locator('input[name="username"]')
    username.fill('test')

    password = page.locator('input[name="password"]')
    password.fill('test')

    submit = page.locator('button[type="submit"]')
    await submit.click()

    await page.wait_for_load_state()
    print(await page.content())


async def login(page):
    username = page.locator('input[name="username"]')
    username.fill('test')

    password = page.locator('input[name="password"]')
    password.fill('test')

    submit = page.locator('button[type="submit"]')
    await submit.click()

async def main(url):
    async with async_playwright() as pw:
        browser = await pw.firefox.launch(headless=True)
        context = await browser.new_context()
        page = await context.new_page()
        await page.goto(target)

        # await get_forms(page)
        await login(page)
        await page.wait_for_timeout(5000)
        print(await page.content())
        await get_storage(page)
        
async def get_storage(page, context)
    await page.evaluate("() => JSON.stringify(localStorage)")
    print(await context.storage_state())
    print(f"STORAGE: {storage}")
    # Clear
    await page.evaluate("localStorage.clear()")

url='http://10.10.10.10'

if __name__ == '__main__':
    asyncio.run(main(url))
