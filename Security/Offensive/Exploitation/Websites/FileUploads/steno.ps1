param(
    [switch] $encode,
    [switch] $decode,
    [Parameter(Mandatory)]
    [string] $image,
    [Parameter(Mandatory)]
    [string] $message
)

function Encode-Message {
    param (
        [string] $message,
        [string] $image_path
    )
    write-host "Encoding $message into $image_path..."
    $message += "o_O"
    $bytes = [System.Collections.ArrayList]@()
    $message.ToCharArray() | % {
        $bytes.Add([System.Text.Encoding]::ASCII.GetBytes($_)) | out-null
    }
    return $bytes
}

function Inject-Image {
    param (
        [Parameter(Mandatory)]
        [string] $message,
        [Parameter(Mandatory)]
        $image_path
    )
    $path = $image_path | Resolve-Path
    Add-Type -A System.Drawing
    $img = [System.Drawing.Image]::FromFile($path)
    $bit = New-Object System.Drawing.Bitmap($img)
    write-host "Width: $($img.Width) x $($img.Height)"
}

if ($encode) {
    Encode-Message $message
    Inject-Image $message $image
}
