<#
$data = [Convert]::FromBase64String('Y+egIFaYXtHdRKFVg5h80Bn/6dECi5iiPgr2L9Bd8LY=')
$iv = "rwj76dfsotja10tk"
$key = "nszxnqbq1s".PadRight(16, [char]0)
$aes = [System.Security.Cryptography.Aes]::Create()
$utf8 = [System.Text.Encoding]::UTF8
$aes.Key = $utf8.GetBytes($key)
$aes.IV = $utf8.GetBytes($iv)
$dec = $aes.CreateDecryptor()
$result = $dec.TransformFinalBlock($data, 0, $data.Length)
$result_str = $utf8.GetString($result)
write-output $result_str
$dec.Dispose()
#>

$og = 'Qm5Na0tGRi9nREtGZ2NGYWlDRlB3dFc5Y3NMUlhRWTROdVFKK2MraENKRm45c0hyL042Q3R3UXgyYUVvcDY2VC9SSWRnSm5VZzkvZzVPVzZPTHYzSlBkRTFRbmtDbHliTURMRlJFSm9GZUwvSFNRK1lBTjhuVSs1eGEzMnZyZEM='
$b1 = [Convert]::FromBase64String($og)
$b2 = [Convert]::FromBase64String($b1)
$data = [char[]] $b2

for ($pos = 0; $pos -lt $data.Length; $pos++) {
    for ($bit = 0; $bit -lt 8; $bit++) {
        # RAW 1
        $one = ($data[0..($pos)])

        # RAW 2
        $two = [System.Text.Encoding]::UTF8.GetBytes(($data[$pos] -bxor (1 -shl $bit)))
        $result = [System.Text.Encoding]::UTF8.GetString($two);
        write-host ($two)
        exit


        <#
        write-host "One: $one"
        write-host "Two: $two"
        write-host "Three: $three"
        #>

        # RAW 3
        $three = $data[($pos + 1) .. -1]

        $test = [string]($one + $two + $three)
        $encoded = [Convert]::ToBase64String($test)
        $encoded2 = [Convert]::ToBase64String($encoded)
        write-host ""
        write-host $encoded2
        write-host ""
    }
}
